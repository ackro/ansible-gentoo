- stat: path=/tmp/parted_is_done
  register: parted_is_done
  tags:
    - storage

#TODO: port to module parted when issues will be fixed
# https://github.com/ansible/ansible/issues/26905
# https://github.com/ansible/ansible/issues/23914
# https://github.com/ansible/ansible/issues/27841
# https://github.com/ansible/ansible/issues/26890
- name: Make Partition Labels
  command: "parted -s {{ main_disk }} mklabel gpt"
  when: parted_is_done.stat.exists == False
  tags:
    - storage

- name: Create Grub BIOS Partition
  when: parted_is_done.stat.exists == False
  parted:
    device: "{{ main_disk }}"
    number: 1
    part_end: 1MiB
    flags: [ bios_grub ]
    state: present
  tags:
    - storage
  
- name: Create Boot Partition
  when: parted_is_done.stat.exists == False
  parted:
    device: "{{ main_disk }}"
    number: 2
    part_start: 1MiB
    part_end: 150MiB
    state: present
  tags:
    - storage

- name: Format Boot Partition
  filesystem: "fstype={{ fstype }} dev={{ main_disk }}2 force={{ force_format }}"
  tags:
    - storage

- name: Create Main Physical Disk
  when: parted_is_done.stat.exists == False
  parted:
    device: "{{ main_disk }}"
    number: 3
    part_start: 150MiB
    flags: [ LVM ]
    state: present
  tags:
    - storage

- file:
    path: /tmp/parted_is_done
    state: touch

- name: Create Main Volume Group
  lvg: "pvs={{ main_disk }}3 vg={{ vg_name }}"
  tags:
    - storage

- name: Create Swap Volume
  lvol: "lv=swap vg={{ vg_name }} size={{ swap_size }}"
  tags:
    - storage

- name: Rescan Volumes
  command: vgscan

- name: Update device mapper
  command: vgchange -ay

- name: Format Swap Volume
  command: "mkswap /dev/mapper/{{ vg_name }}-swap"

- name: Create root Volume
  lvol: "lv=root vg={{ vg_name }} size={{ root_size }}"
  tags:
    - storage

- name: Format root Volume
  filesystem: "fstype={{ fstype }} dev=/dev/mapper/{{ vg_name }}-root force={{ force_format }}"

- name: create root mount
  command: "{{item}} creates=/tmp/gentoo_mounted"
  with_items:
      - mkdir -p /mnt/gentoo
      - mount /dev/mapper/{{ vg_name }}-root /mnt/gentoo 
      - touch /tmp/gentoo_mounted 
  tags:
    - storage

- name: create boot mount
  command: "{{item}} creates=/tmp/boot_mounted"
  with_items: 
      - mkdir -p /mnt/gentoo/boot 
      - mount {{ main_disk }}2 /mnt/gentoo/boot 
      - touch /tmp/boot_mounted
  tags:
    - storage
